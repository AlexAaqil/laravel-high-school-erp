#########################################################################
TODOs:

# authentication - add user levels and permissions like 0 (super admin), 1 (admins), 2 (users) and 3 (blogger).
# profile - users should be able to update profile pictures.
# Logs - keeps logs on when users logged in and what they did when they logged in.
# signup | contact - use proper phone number inputs with country codes.

AUTH
- ensure only active users can login.


DASHBOARD


ADMIN
- search functionality.


USERS


STUDENTS
- admin a student.


PAYMENTS
- accountant can select class to view students and payments.


#########################################################################
REQUIREMENTS:

1. Report forms.
2. School fees.
3. Discipline.
        - Minor and Major disciplinaries with ability for teachers to leave a comment about the indiscipline.
4. Leave outs.
        - should notify parents when a student is issued with a leave out.
5. Textbook issues.



TEACHERS PORTAL
- can update student exam marks.
- can view all classes performance.
- can view student discipline records.
- can view text books issued.
- can view student leaveouts.
- can issue leaveout forms.



STUDENT PORTAL
- can view their report forms.
- can view their school fees statement.
- can view their discipline records.
- can view text books issued.
- can view leaveout history.
- can view teachers statement and remarks.



PARENTS PORTAL
- can send messages to teachers by getting contact information from their end.



#########################################################################
USER STORIES:

Registrar
can add students.



students
can be enrolled for more than one subject.
can view time tables.
can view their results and fee structure.



Teacher
can add students marks for each subject (generate report forms).
can add major and minor disciplinaries as well as comment about the disciplinary.
can issue leave outs (parents get notified when a student is issued with a leave out).
can hand out text books.
can view time tables.
can view all students information.



Accountant
can update school fees records for students.



Parent
can view their child's information.
can view results and fee structures.



#########################################################################
DATABASE:

users {
    first_name
    last_name
    email
    phone_main
    phone_other
    dob
    gender
    image
    address
}

staff {
    username
    password
    user_level
    user_status
    emp_code
    emp_date
    user_id
}

students {
    registration_number
    dorm_room_number
    year_admitted
    graduation_status (default : 0)
    graduation_date

    user_id
    class_id
    dorm_id
    parent_id
}

parents {
    user_id
}

classes {
    class_name
    class_teacher (nullable)
}

dorms {
    dorm_name
    description
}

subjects {
    title

    class_id
    teacher_id
}

payments {
    reference_number
    title (eg. School Fees)
    class
    method
    amount
    description
}

disciplinaries {
    student_id
    teacher_id
    category (minor or major)
    description
}

text_books {
    student_id
    teacher_id
    book_title
    reference_number
}

leave_outs {
    student_id
    teacher_id

}


#########################################################################
REPOS:

- https://github.com/4jean/lav_sms?tab=readme-ov
- https://github.com/changeweb/Unifiedtransform
- https://github.com/hrshadhin/school-management-system
- https://github.com/francoisjacquet/rosariosis
- https://github.com/yungifez/skuul
- https://github.com/parvez-git/laravel-school-management-system
- http://www.campcodes.com/projects/php/school-management-system-in-php/



#########################################################################
NOTES:

User levels {
    0 : super_admin
    1 : admin
    2 : student
    3 : teacher
    4 : accountant
    5 : parent
}
